[
    {
        "url":"https:\/\/discourse.gohugo.io\/t\/vertical-sections-not-displaying\/18280",
        "text":"Vertical sections not displaying\n\nI have this as my sample Hugo page:\n\ntitle = \"Rob's first Hugo reveal site\"\noutputs = [\"Reveal\"]\ntheme = \"night\"\nmargin = 0.2\nweight = 1\n\n# Slide one\n\nText for slide one.\n\n\n# Slide two\n\nText for slide two.\n\n\n{{% section %}}\n\n# Slide three - vertical slide one\n\nText for slide three - vertical slide one\n\n\n# Slide three - vertical slide two\n\nText for slide three - vertical slide two\n\n{{% \/section %}}\n\nBut this is what I see\u2026 can anyone tell me what I am doing wrong?\n\n1 Like\n\nTo debug your site we have to see the code (not just the contents of one content file). Please read #support issues for examples, and follow the advice at Requesting Help.\n\n\nThanks for the hint @maiki, I have uploaded a copy of my sample here:\n\n\nIs there any possibility that the issue is to do with line-endings?\n\n\nI think this may have to do with the recent changes in 0.55 around shortcodes:\n\nThe easiest way to resolve is probably to let the theme author know so they can fix it in the theme directly. You may have to wait for them to get around to doing it, and then update your copy of the theme to the latest version after.\n\nThe fastest is to do it yourself: overwrite the section shortcode by creating a shortcode at yoursite\/layouts\/shortcodes\/section.html. Copy the contents of the theme\u2019s theme\/layout\/shortcodes\/section.html, and add\n\n{{ $_hugo_config := `{ \"version\": 1 }` }}\n\nto the beginning, as discussed in the relnotes I linked to above.\n\n\nFor future reference, this is what I did to fix this (until the reveal creators update the theme).\n\n$ cp .\/themes\/reveal-hugo\/layouts\/shortcodes\/section.html .\/layouts\/shortcodes\n\n$ tree layouts\/\n`-- shortcodes\n    `-- section.html\n\n1 directory, 1 file\n\nEdit that section.html to give it the following contents:\n\n$ cat layouts\/shortcodes\/section.html\n{{ $_hugo_config := `{ \"version\": 1 }` }}\n<section data-shortcode-section>\n{{ .Inner }}\n\nAnd now the section code works as I expected it from following previous (now out of date) tutorial matter.",
        "topic_id":2,
        "format_id":17,
        "topic_confidence":0.9509197474,
        "format_confidence":0.5492852926,
        "weight":0.0068589965
    },
    {
        "url":"https:\/\/skia.googlesource.com\/external\/github.com\/google\/wuffs\/+\/3842c519c9961500d96efee0ff7aafbd20833570\/doc\/note\/quirks.md",
        "text":"Quirks are configuration options that let Wuffs more closely match other codec implementations.\n\nSome codecs and file formats are more tightly specified than others. When a spec doesn\u2018t fully dictate how to treat malformed files, different codec implementations have disagreed on whether to accept it (e.g. whether they follow Postel\u2019s Principle of \u201cbe liberal in what you accept\u201d) and if so, how to interpret it. Some implementations also raise those decisions to the application level, not the library level: \u201cprovide mechanism, not policy\u201d.\n\nFor example, in an animated GIF image, the first frame might not fill out the entire image, and different implementations choose a different default color for the outside pixels: opaque black, transparent black, or something else.\n\nOther file formats have unofficial extensions. For example, a strict reading of the JSON specification rejects an initial \"\\x1E\" ASCII Record Separator, \"\/\/ comments\" or commas after the final array element or object key-value pair (e.g. \"[1,2,3,]\"), but some extensions to the format allow these and other changes.\n\nWuffs, out of the box, makes particular choices (typically mimicking the de facto canonical implementation), but enabling various quirks results in different choices. In particular, quirks are useful in regression testing that Wuffs and another implementation produce the same output for the same input, even for malformed input.\n\nWuffs API\n\nEach quirk is assigned a uint32_t value, packed using the base38 namespace convention. Decoders and encoders can have a set_quirk_enabled!(quirk base.u32, enabled base.bool) method whose first argument is this uint32_t value.\n\nFor example, the base38 encoding of \"gif \" and \"json\" is 0x0F8586 and 0x124265 respectively, so that the GIF-specific quirks have a uint32_t value of ((0x0F8586 << 10) | g), and the JSON-specific quirks have a uint32_t value of ((0x124265 << 10) | j), for some small integers g and j. The high bits are a namespace. The overall quirk values are different even if g and j re-use the same 10-bit integer.\n\nThe generated C language file defines human-readable names for those constant values, such as WUFFS_JSON__QUIRK_ALLOW_LEADING_UNICODE_BYTE_ORDER_MARK.\n\n\nCommon quirks:\n\n  \u2022 WUFFS_BASE__QUIRK_IGNORE_CHECKSUM configures decoders (but not encoders) to skip checksum verification. This can result in noticably faster decodes, at a cost of being less able to detect data corruption and to deviate from a strict reading of the relevant file format specifications, accepting some inputs that are technically invalid (but otherwise decode fine).\n\nPackage-specific quirks:",
        "topic_id":2,
        "format_id":20,
        "topic_confidence":0.981941998,
        "format_confidence":0.9795658588,
        "weight":0.0214338637
    },
    {
        "url":"http:\/\/erlanginside.com\/de\/article\/360\/zotonic-rethinks-the-cms-with-erlang",
        "text":"Interview with Marc Worrell: Zotonic Rethinks the CMS with Erlang\n\nI took a minute from getting ready for my talk at\u00a0Erlang Factory\u00a0(and working on the day job) to talk with\u00a0Marc Worrell, Lead Architect\u00a0of\u00a0Zotonic\u00a0\u2013 a new Content Management System written entirely in Erlang. This is a brief overview of the system focused on the \u2018why\u2019 \u2013 the technical details are well covered on their site, but I wanted to understand the motivations behind a company taking on a project like this. Marc also runs his own programming consultancy,\u00a0WhatWebWhat.\n\nI\u2019m excited to experiment with Zotonic, but I frankly don\u2019t have a downloaded copy of Postgres lying around. I\u2019m planning on getting that installed in order to try it out and will report back.\n\nHere is the interview, as usual, emphasis mine.\n\nEI: Hi Marc, can you tell me the impetus for Zotonic?\n\nMW: I used to be the CTO at Mediamatic. Mediamatic built and maintains the community management system Anymeta. Anymeta grew from a simple library to a full fledged community management system. For that we added more and more interactivity and connectivity. Which brought us in a head-on collision with PHP.\n\nPHP is far from stellar in handling many small requests, can\u2019t keep connections open and gets really slow when your codebase grows. Though we need open connections to user agents, XMPP connectivity and quick turnaround on Ajax requests. All are challenging for PHP. So we ended up adding more and more system services to make PHP perform and have the system support our requirements.\n\nGrowing a site with PHP starts with opcode caches, memcached, a modified memcached with dependency checking, extra servers and then more servers. Finally adding XMPP server and client processes written in Python. A whole lot of extra software.\n\nAnd then we were still rewriting PHP tables into code so that it performed better on application load.\n\nFrustration, especially considering my background with building embedded development platforms. Embedded systems and the programming language C show what you can do with the available CPU power.\n\nAfter I left Mediamatic I started ask myself how to do this better, how to support those multi-core cpus, how to use those gigabytes of memory and how to have all the connectivity a modern website (information hub) needs.\n\nI checked out Ruby on Rails, I checked Django and some other frameworks. They promise a lot. They fall short when you benchmark their efficiency on modern cpus and server systems.\n\nThat is when I rediscovered Erlang. The book from Joe really brought me to the realisation that Erlang could solve most, if not all, the problems I was encountering. And his approach to failure was nothing short of a revelation to me.\n\nThis lay the seed for Zotonic, as there was nothing else.\n\nEI: The Zotonic team seems to have a lot of experience, what brought you together, and what do you do now? Is Zotonic your full-time venture or are you doing something else?\n\nMW: We all know each other from Mediamatic. Tim and Arjan still work for Mediamatic, Peet is a former colleague and now works for Mirabeau. I am currently a freelancer. Zotonic is my tool to deliver great looking web sites that perform well. You could say that it is my full time occupation. Tim and Arjan are part time working on Zotonic.\n\nWe get more and more project requests, so we are happy that we did make the right decision to start Zotonic and make it Open Source as well.\n\nEI: Why Erlang? How does it make a CMS easier if most will be non-distributed\/one-box systems, and Erlang isn\u2019t known for Raw I\/O performance? How are you taking advantage of Erlang\u2019s sweet-spot of easy distributed message passing?\n\nMW: We are now using Erlang\u2019s excellent failure handling and multiprocessing capabilities. I think that the failure handling and with it the possibility to make robust systems is one of the often overlooked features of Erlang, when not the most important.\n\nWe don\u2019t use the distributed nature of Erlang, yet. But that might change quite soon.\n\nThat text processing is essential for web apps is a misconception. Most web apps only parse requests, fetch some data, concatenate a whole lot of text chunks and then output them over a socket back to the user agent. You don\u2019t need text processing for that. In fact on low end machines Erlang is quite capable of saturating a gigabit connection. Informal benchmarks gave more than 6000 page requests per second (famous helloworld templates) on a low end server. That should be enough.\n\nTo achieve this performance we made some rather big changes to Webmachine. Basho will be looking into incorporating those changes into the mainstream Webmachine code.\n\nAnd programming in a functional language is fun\u00a0:-)\n\nEI: NoSQL support? is it important for a CMS? Are there plans to support Riak or Couch or MongoDB?\n\nMW: NoSQL is really the story of the day. A lot of people see it as a means to an end. Some think you need it for performance. That is not true. An external party did some benchmarking on Zotonic and expected the database to be the main bottle neck. It was not, by far.\n\nAs I often say, the best way to achieve high performance is to not hit the database. Add some caching and the current RDBMS products can bring you a long way, especially on modern hardware. When you don\u2019t need millions of objects and 99.99% uptime guarantees then I suggest that you just use a RDBMS. Your data will be safe and the administrators of your customer will be happy that they can access the data easily.\n\nHaving said that, we are looking into Riak and some other distributed stores. We have some projects at hand that require a scale and uptime that will make us move to a distributed system with elegant failure handling. Only with these requirements a distributed store becomes important.\n\nEI: How do you guys use Zotonic yourselves? From an end-user perspective, how does it differ from WordPress or Drupal?\n\nMW: A first impression is important. And the first impression of Zotonic is its speed. I had people asking things like \u201cstop\u2026 did I really see five pages just now?\u201d They are used to the slowness of WordPress and Drupal, at least when not using Google, Yahoo or one of the other big sites.\n\nOver time there will be another big difference: realtime. We are in the process of adding more and more realtime features. They enable realtime communicationa and federation of data. It doesn\u2019t matter where your data (profile, blog etc.) is, it matters that it is up to date and can be published where you want it.\n\nFor ourselves, we are moving all our sites, blogs, and whatnot to Zotonic. It is more fun in Zotonic and we are eager to use the PubSub capabilities Arjan just added.\n\nEI: From the IT-guy perspective, why should he roll out Zotonic?\n\nMW: You need less hardware for more visitors. Let\u2019s give an example.\n\nWe made the site for the New Island Festival, a cultural festival in New York. At some point we were seeing sustained traffic of 2 mbit. What made that traffic impressive was that the site was hosted on a small VPS and only using 5-10% cpu. We have seen other requirements for PHP sites\u00a0:)\n\nEI: What are the largest deployments so far?\n\nMW: The New Island Festival was a nice test bed for the number of visitors. A bit bigger, content-wise, site we just finished is the site for the Mediafonds in the Netherlands. This site has around 25000 pages.\n\nWe are now working on a project with a projected page count of around a million and later we will have a project that requires a ten fold higher page count.\n\nEI: Roadmap \u2013 what are your plans for the future of Zotonic?\n\nMW: We have now scheduled or are planning:\n- redesign of the admin environment.\n- redesign of the access permission system to better support user generated content.\n- extended support of XMPP PubSub, also sharing images and other metadata.\n- realtime tools for server monitoring.\n- support for distributed Zotonic nodes (still with a central store).\n- support for a distributed, fault tolerant data and file store.\n\nAnd many smaller changes that will make the system better for building the websites our customers and programmers love.\n\nEI: MySQL Support? Is it planned?\n\nMW: No, we don\u2019t plan MySQL support. Though it should be do-able with the new binary driver. Right now we are focusing on the distributed version with a k\/v store.\n\nThanks, Marc!\n\nEdit: Only July 21, I took out \u2018destroys WordPress\u2019 from the title; upon reflection, I realized my Erlang zeal got the better of me..\n\nLeave a comment",
        "topic_id":2,
        "format_id":21,
        "topic_confidence":0.9675708413,
        "format_confidence":0.9870829582,
        "weight":0.0022219894
    },
    {
        "url":"http:\/\/www.gnu.org\/software\/hurd\/user\/pochu.html",
        "text":"Emilio Pozuelo Monfort\n\nEmail: pochu27@gmail.com\n\nGSoC 2010: Hurd: Fix Compatibility Problems Exposed by Testsuites\n\nMentor: Carl Fredrik Hammar\n\n\nThis project will consist of identifiying some projects' test suite failures when executed on GNU\/Hurd, debugging them, and if they are truly GNU\/Hurd issues (and not problems in the projects themselves), fixing them.\n\n\n  \u2022 July 18th: GLib finished.\n  \u2022 July 22nd: coreutils finished.\n  \u2022 July 25th: All Perl failures investigated.\n  \u2022 August 5th: Perl finished.\n  \u2022 August 8th: All Python failures investigated.\n  \u2022 August 16th: Python finished.\n  \u2022 August 16th: Firm 'pencils down' date\n\n\n  \u2022 Investigate why coreutils' nice test fails.\n  \u2022 Analyze Perl's testsuite failures.\n\n\n\nJuly 26th - August 1st\n\n  \u2022 Tested \/dev\/fd\/N patches and sent them for review.\n  \u2022 Finished SCM_RIGHTS patch. Created a minimal testcase without using glibc to demonstrate the socket_send\/recv failure with non-socket fds. Sent the testcase and the patch for review.\n  \u2022 Investigated cp issues with O_NOFOLLOW & O_NOTRANS. Sent a mail to bug-hurd explaining both issues and possible solutions.\n\nJuly 19th - July 25th\n\n  \u2022 Initial SCM_RIGHTS implementation. Seems to work when sending pipes, but fails miserably when sending fds from an open syscall. No idea why yet.\n  \u2022 Fixed memleaks in sendmsg() while implementing SCM_RIGHTS. Patch accepted upstream.\n  \u2022 Had to build glibc thrice because the system crashed and the fs was totally corrupted. I'll build stuff in a separate partition as suggested from now on. Doesn't help. It turns out the issue seems to be with kvm, or at least it's only reproducible for me there. I've switched to VirtualBox and there are no filesystem issues there.\n  \u2022 Addressed comments in the \/dev\/fd\/N patches. Need to test them (when I can build glibc and Hurd without the system crashing).\n\nJuly 14th - July 18th\n\n  \u2022 Catched up with email.\n  \u2022 Prepared a patch to implement getsockopt(fd, SOL_SOCKET, SO_TYPE, ...). Patch committed to Hurd.\n  \u2022 Addressed comments in the \/dev\/fd\/N patches and resent them.\n  \u2022 Investigated another glib's unix-fd failure: passing fds over a socket using sendmsg() doesn't dup them. Created a minimal testcase. Prepared a preliminary patch, needs testing and fixing.\n\nMay 26 - July 13th\n\n  \u2022 Copyright assignment on file.\n  \u2022 Studied a lot to finish my BSc.\n  \u2022 Got the linkat patch (Savannah #29655) committed upstream.\n\nMay 19 - May 26\n\nMay 12 - May 19\n\n  \u2022 Read http:\/\/www.gnu.org\/software\/hurd\/hurd-talk.html\n  \u2022 Half read http:\/\/www.gnu.org\/software\/hurd\/hacking-guide\/hhg.html\n  \u2022 Read many Hurd interfaces (fs.defs, auth.defs, fsys.defs, io.defs, password.defs).\n\nMay 5 - May 12\n\n  \u2022 Read http:\/\/www.gnu.org\/software\/hurd\/hurd-paper.html\n  \u2022 Improved the linkat() patch\n  \u2022 Fixed the issues mentioned in bug GNU Savannah bug #28934, but after doing so I realized that wouldn't work well. The only good solution is to pass file_name from execve() to the exec server, so we need new RPCs.\n\nApril 28 - May 5\n\n  \u2022 Submitted a talk proposal on Hurd with Michael Banck for DebConf\n  \u2022 Sent request to assign copyright to the FSF for Hurd\/Mach\/libc\n\nBefore April 28\n\n  \u2022 Investigated the glib's gtester problem and tracked it down: GNU Savannah bug #28934. Prepared a patch but it's not good.\n  \u2022 glib's garray test timeouts on Hurd. The tests passes if the timeout is increased. The current upstream timeout (10s) is quite small (it fails on many Debian builds for some Linux arches). However on Hurd it needs a very big time it seems (like more than 100s). Maybe do an allocation benchmarch?\n  \u2022 Investigated glib's unix-fd test failure: getsockopt() isn't implemented on Hurd. Need to implement it in hurd\/pflocal\/socket.c.\n  \u2022 Investigated coreutils' ln EIEIO, with Samuel's help. linkat() is buggy. Reported as bug 29655. Prepared a patch for it.\n  \u2022 Investigated coreutils' cp EACCES. Test case: 'mkfifo a && cp -R --copy-contents a b'. Problem is that O_NOFOLLOW adds O_NOTRANS.\n\nMidterm Evaluation\n\n\n  \u2022 Assigned copyright to the FSF.\n  \u2022 Read many documentation and source code.\n  \u2022 \/dev\/fd\/N bug fixed\n  \u2022 Prepared a patch for getsockopt()\n  \u2022 Fixed linkat() problems.\n  \u2022 Investigated bug with O_NOFOLLOW & O_NOTRANS (needs more work).\n  \u2022 Investigated a glib test failure (garray). Not a Hurd issue.\n\n\n  \u2022 Studied a lot to finish my BSc. Didn't work on Hurd for a month because of that, so that's why I couldn't make a lot of progress (this was known in advance, although in the end the downtime was a bit larger than expected).\n\n  \u2022 There's no expected downtime from now on.",
        "topic_id":2,
        "format_id":14,
        "topic_confidence":0.9891480803,
        "format_confidence":0.8824250698,
        "weight":0.0012356798
    },
    {
        "url":"http:\/\/lists.gnu.org\/archive\/html\/help-make\/2011-11\/msg00095.html",
        "text":"[Top][All Lists]\n\n[Date Prev][Date Next][Thread Prev][Thread Next][Date Index][Thread Index]\n\nMake detects warning as errors\n\nFrom: Andrea.Pasetti\nSubject: Make detects warning as errors\nDate: Thu, 24 Nov 2011 17:05:59 +0100\n\nIn some projects (but not in all) when i compile it make detects warning as\nerrors and stops the build, but i dont' want this!\nCan someone help me, plase?\n\nI'm using GNU make 3.81 and below a compile LOG:\n\n**** Build of configuration Release for project Solista-Engine ****\n\nmake pre-build main-build\nrm -rf  \"C:\\_da\\Solista\\_SkMacc\\SkMk\\PerBoot\\ABS\\SolSKMak338.mhx\" \"C:\\_da\n\\Solista\\_SkMacc\\SkMk\\PerBoot\\ABS\\SolSKMak338.abs\" \"C:\\_da\\Solista\\_SkMacc\n\nBuilding file: C:\/_da\/Solista\/germania.c\nCompiling C source files\nfcc907s -cpu MB96F338USA -w 6 -Xdof -cwno -INF srcin -D NO_RTOS -U NO_RTOS\n-I \"C:\\Softune\\rtos\\907\\syslib\" -I \"C:\\Softune\\lib\\907\\include\" -I \"C:\\_da\n\\Solista\" -I \"C:\\_da\\Solista\\_SkMacc\" -I \"C:\\_da\\Solista\\_SkMacc\\SkMk\" -I\n\"C:\\_da\\Solista\\_SkMacc\\Include96\" -I \"C:\\_da\\Solista\\trasmissione\" -I\n\"C:\\_da\\Solista\\utility\" -O 4 -K SPEED -K UNROLL -K LIB -K EOPT -K NOADDSP\n-B -model LARGE -o \"Solista\/germania.o\" \"C:\/_da\/Solista\/germania.c\"\n*** c:\\_da\\solista\\germania.c(751) W1352C: initialization incompatible\npointer types from `const SELEZIONE1*' to `const struct\nStrutturaSelezione4*const ': `Germania_L01'\nmake: *** [Solista\/germania.o] Error 1\n\n**** Build Finished ****This message and any file transmitted with it contain \nconfidential information and are intended only for the use of the individual or \nentity to whom they are addressed. If you are not the intended recipient, \nplease delete this message and attachments and notify the sender immediately by \nreply email. Any unauthorised copying of this message or unauthorised \ndistribution of the information contained herein or any action taken or omitted \nto be taken in reliance on it is prohibited. Considering the means of \ntransmission the sender does not undertake any liability with respect to the \nsecrecy and confidentiality of the information contained in this email. \nAlthough N&W Global Vending Group takes reasonable care to ensure that any \nattachment to this email does not contain software viruses, you should carry \nout your own virus checks before opening any attachment. N&W Global Vending \nGroup does not accept any responsibility for damages caused by viruses or other \nmalicious software transmitted via email. \n\nEmail secured by Check Point\n\nreply via email to\n\n[Prev in Thread] Current Thread [Next in Thread]",
        "topic_id":2,
        "format_id":4,
        "topic_confidence":0.9869017005,
        "format_confidence":0.6623570323,
        "weight":0.0231686933
    },
    {
        "url":"https:\/\/www.mirkosertic.de\/blog\/2016\/11\/compile-time-speed-gwt-2-8-0-vs-teavm-0-4-3\/",
        "text":"Some years ago I wrote a JavaFX based Game authoring system. It was also written to be ported to different run time environments by using transpiler technologies such as GWT or TeaVM. While TeaVM was heavily improved over time, I haven\u2019t seen a new GWT release in the wild. Now, GWT 2.8.0 is released, and the question arises: Is the compiler still as slow as in 2.7? Well, lets take a look!\n\n\nGWT 2.8.0\n\nTeaVM 0.4.3\n\n\n\n43.777 ms\n\n10.383 ms\n\n12.244 ms\n\nSize of JS in un-optimized mode\n\n3.700 kb\n\n2.890 kb\n\n2.650 kb\n\nSize of JS in optimized mode\n\n1.540 kb\n\n955 kb\n\n1013 kb\n\nIt is interesting and also a little bit weird. The GWT compiler became slower compared to its older 2.7.0 brother. You can see the GWT 2.7.0 performance charts in GWT vs. Dragome vs. TeaVM for Game Programming. While the JS size stayed almost constant, there were no further improvements from the external point of view. Hopefully the J2CL Project will keep improving. Till then, I will stay with TeaVM. Version 0.4.3 is stable and production ready. Version 1.0.0 is currently under development and will hopefully be soon available. TeaVM really rocks!",
        "topic_id":2,
        "format_id":15,
        "topic_confidence":0.9888794422,
        "format_confidence":0.9795200825,
        "weight":0.02198408
    },
    {
        "url":"http:\/\/mailman.alsa-project.org\/pipermail\/alsa-devel\/2011-March\/038107.html",
        "text":"[alsa-devel] [PATCH] ASoC: Explicitly say registerless widgets have no register\n\nLiam Girdwood lrg at slimlogic.co.uk\nWed Mar 23 23:21:14 CET 2011\n\nOn Wed, 2011-03-23 at 20:46 +0000, Mark Brown wrote:\n> This stops code that handles widgets generically from attempting to access\n> registers for these widgets.\n> Signed-off-by: Mark Brown <broonie at opensource.wolfsonmicro.com>\n\nAcked-by: <lrg at ti.com>\n\nMore information about the Alsa-devel mailing list",
        "topic_id":2,
        "format_id":4,
        "topic_confidence":0.9861981273,
        "format_confidence":0.9477629066,
        "weight":0.0231521761
    },
    {
        "url":"https:\/\/www.owasp.org\/index.php?title=A7_2004_Improper_Error_Handling&diff=42834&oldid=42726",
        "text":"Difference between revisions of \"A7 2004 Improper Error Handling\"\n\nJump to: navigation, search\n(New page: ==Description== Improper handling of errors can introduce a variety of security problems for a web site. The most common problem is when detailed internal error messages such as stack tra...)\nm (Protected \"A7 2004 Improper Error Handling\" [edit=sysop:move=sysop])\n(2 intermediate revisions by the same user not shown)\nLine 1: Line 1:\n''This article is for the OWASP Top 10 2004''\nLine 17: Line 19:\n==Examples and References==\n==Examples and References==\n* OWASP discussion on generation of error codes: http:\/\/www.owasp.org\/documentation\/guide\/\n* [[Error_Handling,_Auditing_and_Logging|OWASP Development Guide, Error Handling]]\n==How to Determine If You Are Vulnerable ==\n==How to Determine If You Are Vulnerable ==\n\nLatest revision as of 07:19, 10 October 2008\n\nThis article is for the OWASP Top 10 2004\n\n\nImproper handling of errors can introduce a variety of security problems for a web site. The most common problem is when detailed internal error messages such as stack traces, database dumps, and error codes are displayed to the user (hacker). These messages reveal implementation details that should never be revealed. Such details can provide hackers important clues on potential flaws in the site and such messages are also disturbing to normal users.\n\nWeb applications frequently generate error conditions during normal operation. Out of memory, null pointer exceptions, system call failure, database unavailable, network timeout, and hundreds of other common conditions can cause errors to be generated. These errors must be handled according to a well thought out scheme that will provide a meaningful error message to the user, diagnostic information to the site maintainers, and no useful information to an attacker.\n\nEven when error messages don\u2019t provide a lot of detail, inconsistencies in such messages can still reveal important clues on how a site works, and what information is present under the covers. For example, when a user tries to access a file that does not exist, the error message typically indicates, \u201cfile not found\u201d. When accessing a file that the user is not authorized for, it indicates, \u201caccess denied\u201d. The user is not supposed to know the file even exists, but such inconsistencies will readily reveal the presence or absence of inaccessible files or the site\u2019s directory structure.\n\nOne common security problem caused by improper error handling is the fail-open security check. All security mechanisms should deny access until specifically granted, not grant access until denied, which is a common reason why fail open errors occur. Other errors can cause the system to crash or consume significant resources, effectively denying or reducing service to legitimate users.\n\nGood error handling mechanisms should be able to handle any feasible set of inputs, while enforcing proper security. Simple error messages should be produced and logged so that their cause, whether an error in the site or a hacking attempt, can be reviewed. Error handling should not focus solely on input provided by the user, but should also include any errors that can be generated by internal components such as system calls, database queries, or any other internal functions.\n\nEnvironments Affected\n\nAll web servers, application servers, and web application environments are susceptible to error handling problems.\n\nExamples and References\n\nHow to Determine If You Are Vulnerable\n\nTypically, simple testing can determine how your site responds to various kinds of input errors. More thorough testing is usually required to cause internal errors to occur and see how the site behaves.\n\nAnother valuable approach is to have a detailed code review that searches the code for error handling logic. Error handling should be consistent across the entire site and each piece should be a part of a well-designed scheme. A code review will reveal how the system is intended to handle various types of errors. If you find that there is no organization to the error-handling scheme or that there appear to be several different schemes, there is quite likely a problem.\n\nHow to Protect Yourself\n\nA specific policy for how to handle errors should be documented, including the types of errors to be handled and for each, what information is going to be reported back to the user, and what information is going to be logged. All developers need to understand the policy and ensure that their code follows it.\n\nIn the implementation, ensure that the site is built to gracefully handle all possible errors. When errors occur, the site should respond with a specifically designed result that is helpful to the user without revealing unnecessary internal details. Certain classes of errors should be logged to help detect implementation flaws in the site and\/or hacking attempts. Very few sites have any intrusion detection capabilities in their web application, but it is certainly conceivable that a web application could track repeated failed attempts and generate alerts. Note that the vast majority of web application attacks are never detected because so few sites have the capability to detect them. Therefore, the prevalence of web application security attacks is likely to be seriously underestimated.\n\nThe OWASP Filters project is producing reusable components in several languages to help prevent error codes leaking into user\u2019s web pages by filtering pages when they are constructed dynamically by the application.",
        "topic_id":2,
        "format_id":7,
        "topic_confidence":0.956305027,
        "format_confidence":0.6166646481,
        "weight":0.0013621614
    }
]