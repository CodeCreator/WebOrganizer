[
    {
        "url":"http:\/\/browserchooser2.codeplex.com\/wikipage?title=Release%20Path",
        "text":"\nThis page will serve as a roadmap to release of Browser Chooser 2\n\nAlpha 1\n\n  \u2022 Update Names and Contributors to differentiate between original and BC2\n  \u2022 Convert 'On on goto' to correct Try Catch blocks (I know they are slower but more robust).\n  \u2022 Fix file names and class name to proper names and casing (on going)\n  \u2022 Add flexible first screen\n\nAlpha 2\n\n  \u2022 Enable default browser settings\n  \u2022 Enable short url lookup\n  \u2022 Enable auto-update - latest version is populated in the source files, publicly available\n  \u2022 Enable \/ detect \/ migrate \/ default to portable mode\n  \u2022 Update links to BC2\n\nAlpha 3\n\n  \u2022 Enable dynamic protocol and filetype (Per conversation in 930\n  \u2022 Complete windows 8+ support\n  \u2022 Extract icons from EXEs\n  \u2022 UI cleanup\n\nBeta 1\n\nSee Beta 1 To-Do List for what is in Beta 1\n\nPost Release\n\n  \u2022 Add option to download known browsers instead of limited built-in list\n\nThis will be expanded as the source code is explored and refactored.\n\nLast edited May 6, 2015 at 2:51 PM by gmyx, version 6",
        "topic_id":2,
        "format_id":20,
        "topic_confidence":0.9658550024,
        "format_confidence":0.9522938728,
        "weight":0.0084330865
    },
    {
        "url":"https:\/\/lists.busybox.net\/pipermail\/buildroot\/2018-March\/216086.html",
        "text":"[Buildroot] [PATCH 2\/2] core\/instrumentation: shave minutes off the build time\n\nPeter Korsgaard peter at korsgaard.com\nSun Mar 18 16:33:45 UTC 2018\n\n>>>>> \"Yann\" == Yann E MORIN <yann.morin.1998 at free.fr> writes:\n\n\n >> - It doesn't work for packages using rsync to install,\n >> E.G. skeleton-init-common as rsync also sets the mtime to match the\n >> source files\n\n > We could maybe tell rsycn not to do that, then?\n\nYes, possibly.\n\n >> - It breaks for <pkg>-reinstall\n\n > Well, we can't guarantee anything except with a clean build from scratch\n > anyway.\n\nTrue. We could potentionally do a touch on the stamp file before running\nfind, but it is somewhat icky.\n\n >> I don't think either of those are really big issues compared to the huge\n >> slowdown, but it is worth noticing.\n\n > Well, the -reinstall was already not working correctly, because the list\n > pf files before\/after would be alsmost the same, and the md5-diff would\n > miss all the laready-installed files for the package.\n\n > The rsync issue is new, but we can \"fix\" it in a later patch, then, for\n > those packages like the skeletons, by using the --no-times option for\n > example.\n\nYes. I guess we cannot use --no-times unconditionally in SYSTEM_RSYNC,\nas the mtime shouldn't be touched for source files so OVERRIDE_SRCDIR\ndoesn't rebuild too much.\n\n > However, if a third-party package internally uses rsync as its install\n > method, we're screwed. But who would be insane enough to do that? ;-]\n\nAnd even so, the breakage is not so bad.\n\n > Alternatively, we could use ctime instead of mtime, maybe? Or check\n > both?\n\nctime would presumably miss modifications to existing files, so that is\nno good.\n\n >> > +define step_pkg_size_inner\n >> > +\tcd $(2); \\\n >> > +\tfind . \\( -type f -o -type L \\) \\\n >> > +\t\t-newer $($(PKG)_DIR)\/.stamp_built \\\n >> > +\t\t-exec printf '$(1),%s\\n' {} + \\\n >> > +\t\t>> $(BUILD_DIR)\/packages-file-list$(3).txt\n >> What find version are you using? My fileutils find (and the busybox\n >> applet) use 'l' for symlinks, so I've changed it to that.\n\n > Doh, the s\/L\/l\/ is still uncomitted here. Dang...\n\n\nBye, Peter Korsgaard\n\nMore information about the buildroot mailing list",
        "topic_id":2,
        "format_id":4,
        "topic_confidence":0.974350214,
        "format_confidence":0.9677041173,
        "weight":0.0091496129
    },
    {
        "url":"https:\/\/sigtar.com\/tag\/h264\/",
        "text":"HEVC media optimization\n\nDo you have a large collection of video media files not using HEVC (H265) yet? There is a massive amount of disk space coming your way if you flick over to the new video codec format.\n\nHEVC definitely lives up to its name, for most media you can expect a 70% or more disk savings from transcoding from an old codec. There are some catches though\u2026 If you want your TV to play it direct (i.e. straight off the file) the codec will need to be supported by it. You can of course get around this by using a media server such as Plex or Emby which will transcode from HEVC back to a compatible format.\n\nWhy would you transcode to HEVC? \u2013 again, disk space. HEVC as stated above can reduced you Media footprint significantly. You could boost your quality and save your disk space at the same time by recording at a higher resolution then applying the HEVC codec.\n\nI created a powershell script to transcode my media to HEVC using my AMD graphics card. The advantage of doing this is that transcoding completed by my GPU is significantly faster than my CPU. I do not have the graphics card in my media server, so instead connect via SMB and let my gaming machine run the transcoding from remote\u2026\n\nThe powershell script uses ffmpeg to ;\n\n  \u2022 transcodes video stream to hevc using AMD h\/w encoder\n  \u2022 copys all existing audio and subtitles (i.e. no conversion)\n  \u2022 works in batches (to prevent constant scanning of files) \u2013 able to set max batch size and processing time before re-scanning disk\n  \u2022 overwrites source with new HEVC transcode if\u00a0move_file = 1\u00a0(WARNING this is default!)\n  \u2022 checks to see if video codec is already HEVC (if so, skips)\n  \u2022 writes\u00a0transcode.log\u00a0for successful transcode (duration and space savings)\n  \u2022 writes\u00a0skip.log\u00a0for already hevc and failed transcodes (used to skip in next loop, errors in transcode.log)\n\nCheck here for updates and script \u2013 https:\/\/github.com\/dwtaylornz\/hevctranscode",
        "topic_id":2,
        "format_id":20,
        "topic_confidence":0.7694448829,
        "format_confidence":0.5453820229,
        "weight":0.0067181878
    },
    {
        "url":"https:\/\/app.cnvrg.io\/docs\/core_concepts\/apps.html",
        "text":"# Apps\n\ncnvrg is a full-stack platform, designed to simplify every aspect of your workflow.\n\nOne important part of any data scientist\u2019s work is presenting their work to others. That project you\u2019ve been working on for weeks won\u2019t go on much longer if you aren\u2019t able to effectively communicate what you have achieved. cnvrg can make that task easier than ever.\n\ncnvrg works easily and seamlessly with three major data communication platforms so you can use whatever is most convenient and efficient for your and your team\u2019s needs.\n\nThe topics in this page:\n\n# R Shiny\n\nShiny is an R package that makes it easy to build interactive web apps straight from R. You can host standalone apps on a webpage or embed them in R Markdown documents or build dashboards. You can also extend your Shiny apps with CSS themes, htmlwidgets, and JavaScript actions.\n\nLearn how to use R Shiny.\n\n# Use R Shiny\n\nTo set up an R Shiny dashboard:\n\n  1. Navigate to Apps in your project.\n  2. Click R Shiny\n  3. For File, enter the full path of the R Shiny app.R file.\n  4. In Advanced Settings:\n    1. For Image, select the default cnvrg_r image.\n    2. For Compute, click the compute you would like to use.\n  5. Click Publish. cnvrg will spin up the compute and start running the R Shiny server.\n\n\nThe R Shiny file must be called app.R.\n\nIf no path is given, app.R is assumed to be in the project's parent directory. If you enter the full path (in the project) for File, for example, my_folder\/app.R, then that file will be loaded from the correct subdirectory.\n\n# R Shiny logs\n\nThe logs for the R Shiny server can be found within the compute at \/var\/log\/shiny-server\n\n# Customize the R Shiny configuration with a custom image\n\nYou can modify the R Shiny configuration to better suit your own requirements. By default, cnvrg starts the R Shiny server using the command exec shiny-server 2>&1 and runs using the following configuration:\n\n# Instruct Shiny Server to run applications as the user \"shiny\"\nrun_as shiny;\n# Define a server that listens on port 3838\nserver {\n  listen 3838;\n  # Define a location at the base URL\n  location \/ {\n    # Host the directory of Shiny Apps stored in this directory\n    site_dir \/cnvrg; #or a path of the app.R file\n    # Log all Shiny output to files in this directory\n    log_dir \/var\/log\/shiny-server;\n    # When a user visits the base URL rather than a particular application,\n    # an index of the applications available in this directory will be shown.\n    directory_index on;\n\nIf you would like to start the server in your own customized way, create a custom image and save your custom configuration file as \/init. If \/init exists, cnvrg will use it start the shiny server otherwise it will run with the default server startup:\n\n# Make sure the directory for individual app logs exists\nmkdir -p \/var\/log\/shiny-server\nchown shiny.shiny \/var\/log\/shiny-server\nif [ \"$APPLICATION_LOGS_TO_STDOUT\" != \"false\" ];\n    # push the \"real\" application logs to stdout with xtail in detached mode\n    exec xtail \/var\/log\/shiny-server\/ &\n# start shiny server\nexec shiny-server 2>&1\n\n# Dash\n\nDash is a productive Python framework for building web applications.\n\nWritten on top of Flask, Plotly.js, and React.js, Dash is ideal for building data visualization apps with highly custom user interfaces in pure Python. It's particularly suited for anyone who works with data in Python.\n\nThrough a few simple patterns, Dash abstracts away all of the technologies and protocols that are required to build an interactive web-based application. Dash is simple enough that you can bind a user interface around your Python code in an afternoon.\n\nDash apps are rendered in the web browser. You can deploy your apps to servers and then share them through URLs. Since Dash apps are viewed in the web browser, Dash is inherently cross-platform and mobile ready.\n\nLearn how to use Dash.\n\n# Voil\u00e0\n\nVoil\u00e0 turns Jupyter notebooks into standalone web applications.\n\nNot only does it create visual graphs to make reporting easier, it also democratizes Jupyter notebooks for non-technical users. With Voil\u00e0, every notebook can be turned into a Voil\u00e0 app. Better yet, you can create a customized dashboard with results of your machine learning project. Voil\u00e0 supports Jupyter interactive widgets, including roundtrips to the kernel. It improves the conciseness by not permitting arbitrary code execution by consumers of dashboards.\n\nOther benefits of Voil\u00e0 are that it is built upon Jupyter standard protocols and file formats, and works with any Jupyter kernel (C++, Python, Julia). This makes Voil\u00e0 a language-agnostic dashboarding system. On top of everything, Voil\u00e0 is extensible and includes a flexible template system to produce rich application layouts. That means you can easily customize your dashboard based on the Jupyter notebook being deployed.\n\n# Deploy an App\n\nTo deploy an app:\n\n  1. Enter the project you want to publish your app from.\n  2. Select Apps on the sidebar.\n  3. Choose the app type, enter the file that will be used for the app and allocate a compute.\n  4. If necessary, choose a dataset and fill in the other options.\n  5. Click Publish.\n\ncnvrg will do the rest for you!\n\n# Update a Deployed App\n\nYou can update a deployed app without redeploying from scratch. To update an app:\n\n  1. Go to the app you wish to update.\n  2. Click Versions on the top menu bar.\n  3. Select a new cnvrg.io Commit to update the service to.\n  4. Click Update. cnvrg will update the app to use the new chosen commit.\n\nWhen connected to git, clicking Update will also pull the latest git commit for your branch (even if you do not choose a new cnvrg Commit).\n\nLast Updated: 8\/25\/2020, 8:06:12 AM",
        "topic_id":2,
        "format_id":20,
        "topic_confidence":0.9403790236,
        "format_confidence":0.9500359297,
        "weight":0.0082106503
    },
    {
        "url":"https:\/\/searchsoftwarequality.techtarget.com\/news\/252468703\/IBM-VMware-ease-Kubernetes-complexity-with-Kabanero-Octant",
        "text":"imtmphoto - Fotolia\n\nNews Stay informed about the latest enterprise technology news and product updates.\n\nIBM, VMware ease Kubernetes complexity with Kabanero, Octant\n\nTools from IBM and VMware help developers build apps that are deployed on Kubernetes clusters, as well as handle complex Kubernetes workloads.\n\nIBM and VMware have expanded their toolboxes to help developers deal with Kubernetes complexity, and better understand how code moves through clusters.\n\nBig Blue has been on a mission to empower developers with tools that lower the barrier to entry for developers in enterprises that move to the cloud. At the O'Reilly Open Source Convention (OSCON) this summer, IBM introduced Kabanero and other tools that enable developers to create apps that are ready to be deployed onto Kubernetes without first becoming experts in containers and Kubernetes.\n\nThe open source software (OSS) project is an upstream distribution of IBM Cloud Paks, which the company introduced earlier this month as part of the cloud-native transformation of its software and its integration with Red Hat. Kabanero provides prebuilt deployments to Kubernetes and Knative, based on best practices conceived while working with clients, said Nate Ziemann, a senior product manager at IBM Cloud. These shortcuts help developers spend more time developing scalable applications and less time understanding infrastructure, he said.\n\nKabanero goes beyond helping IBM onramp users into its Cloud Paks commercial offering, said Charlotte Dunlap, an analyst at GlobalData in Santa Cruz, Calif.\n\n\"[Kabanero] provides developers with Kubernetes-based best practices around a curated set of OSS projects such as Spring, Node.js and Swift, and operations teams with deeper pipeline and app lifecycle management OSS technologies and services, both of which aim to help get DevOps teams up and running quickly,\" she said.\n\nTrio of IBM tools zero in on Kubernetes complexity\n\nTo its credit, VMware isn't taking Kubernetes lying down. They've been very proactive in adapting to what their customers need and [for what they] are asking.\nCharles KingAnalyst, Pund-IT\n\nIn addition to Kabanero, IBM also introduced other open source projects to ease the way for developers building apps for Kubernetes deployments.\n\nCodewind allows developers to work in containers without even knowing they are using containers. It provides extensions to popular IDEs such as Visual Studio Code, Eclipse and Eclipse Che so developers can use their preferred IDE to build applications in containers. The tool enables developers to rapidly iterate, debug and test app performance inside containers.\n\nMeanwhile, Appsody simplifies the creation of cloud-native applications in containers with preconfigured stacks and templates for popular open source runtimes and frameworks.\n\nCodewind UI\nScreenshot of Codewind UI. Developers can create and import cloud-native applications such as Node.js, Java and Swift and automatically generates and builds them into local containers.\n\nKabanero and Appsody will use Codewind to provide an integrated IDE experience. And both Codewind and Appsody work with IBM's recently released Razee, which provides multicluster continuous delivery tooling for Kubernetes and focuses on management of Kubernetes at scale. This set of tools will help developers move applications through development, test and production Kubernetes clusters.\n\nKubernetes is the industry standard orchestration technology for containers, but opens up a world of complexity to enterprises that want to adopt and use containers, particularly to react to failures in an organized way and figure out all the different resource types available to deploy on Kubernetes, Ziemann said. Building cloud-native apps for Kubernetes, and using DevOps practices, exposes more infrastructure decisions that require a developer to understand, learn and develop, such as security and network ingress. Kabanero and the other tools help developers and architects and operations work together better, he added.\n\nCodewind UI, showing application monitoring statistics.\nScreenshot of Codewind UI, with application monitoring statistics relevant to run microservices, as well as the ability to generate performance test load for microservices, and identify hot methods and potential application bottlenecks.\n\nVMware Octant peers through Kubernetes complexity\n\nMeanwhile, VMware is approaching Kubernetes complexity down the line with Octant, a developer-centric web interface for Kubernetes that enables developers to inspect a Kubernetes cluster where applications reside.\n\nOctant was born out of the idea that those not well-versed in Kubernetes struggle to understand why deployed workloads don't work correctly. At its core, the tool understands implicit and explicit relationships between Kubernetes objects and if they are working correctly, said Bryan Liles, the VMware senior staff engineer who led the Octant project. It includes a dashboard to give more context, and plugins to graphs or custom resources to add information to cluster views, such as more details for objects that aren't in Kubernetes core or have special rules or circumstances.\n\nVMware Octant UI\nVMware Octant UI, showing a healthy Kubernetes deployment.\n\nMoreover, Octant is extensible, as there are different ways to manage a Kubernetes cluster. Octant enables developers to integrate ecosystems of tools to create and manage objects, provide observability, and work with CI\/CD tools into one convenient browser-based interface, Liles said in a blog post.\n\n\"To its credit, VMware isn't taking Kubernetes lying down,\" said Charles King, an analyst at Pund-IT in Hayward, Calif. \"They've been very proactive in adapting to what their customers need and [for what they] are asking.\"\n\nThis Content Component encountered an error\n\nJoin the conversation\n\n1\u00a0comment\n\nSend me notifications when other members comment.\n\nPlease create a username to comment.\n\nHow has Kubernetes complexity impacted your organization?",
        "topic_id":2,
        "format_id":10,
        "topic_confidence":0.9270846844,
        "format_confidence":0.9772264957,
        "weight":0.0004480452
    },
    {
        "url":"http:\/\/mail-archives.eu.apache.org\/mod_mbox\/incubator-general\/200611.mbox\/%3C7a31ebb30611141802m51e2cdf1hbdc6ed0d9f44ff1a@mail.gmail.com%3E",
        "text":"incubator-general mailing list archives\n\nSite index \u00b7 List index\nMessage view \u00ab Date \u00bb \u00b7 \u00ab Thread \u00bb\nTop \u00ab Date \u00bb \u00b7 \u00ab Thread \u00bb\nFrom \"J Aaron Farr\" <>\nSubject Re: RE: [VOTE] Graduate OFBiz Podling\nDate Wed, 15 Nov 2006 02:02:09 GMT\nOn 11\/14\/06, Noel J. Bergman <> wrote:\n\n> As for my own vote, -1 on a procedural basis:\n> > Based on early discussion about OFBiz at the ASF (around the time\n> > OFBiz entered the incubator) the best place for the project seems\n> > to be as a top level project (TLP). This is a separate thing to\n> > vote on, so I mention it here for information purposes only.\n> As has been discussed, the Incubator PMC would want to see the proposal that\n> is to be put before the Board, so please submit one, and I'll revise my\n> vote.\n\nYes, this vote should be considered provisional based on approval of a\nboard resolution for an OFBiz TLP.  I'm working on such a resolution\nright now but it's not going to get into this month's board meeting\n\nOtherwise I'm with Yoav, enthusiastically voting +1.\n\n> Otherwise, at first glance, things look pretty good.  The STATUS file\n> ( may or may not be entirely\n> accurate (I haven't cross-referenced the Committer list, for example), but\n> on the face of it, it is as complete as any I've seen lately.\n\nThe OFBiz community has done an exceptional job in this respect.\n\n\nTo unsubscribe, e-mail:\nFor additional commands, e-mail:\n\nView raw message",
        "topic_id":2,
        "format_id":4,
        "topic_confidence":0.9390473962,
        "format_confidence":0.8426459432,
        "weight":0.0088181026
    },
    {
        "url":"https:\/\/developer.apple.com\/design\/human-interface-guidelines\/macos\/menus\/menu-anatomy\/",
        "text":"A menu presents a list of items\u2014commands, attributes, or states\u2014from which a user can choose. An item within a menu is known as a menu item, and may be configured to initiate an action, toggle a state on or off, or display a submenu of additional menu items when selected or in response to an associated keyboard shortcut. Menus can also include separators, and menu items can contain icons and symbols, like checkmarks. By default, all menus adopt translucency.\n\nScreenshot of the Safari File menu, with the Share submenu opened and the AirDrop item chosen.\n\nWhen a menu is displayed onscreen, it remains open until the user chooses a menu item, navigates to another menu, clicks outside of the menu, switches to another app, or quits the app; or until the system displays an alert.\n\nTypes of Menus\n\nThere are three types of menu in macOS, each of which has a specific use case, as noted in the following table:\n\nMenu Type Description\nMenu bar menu Exposes app-specific menu items when chosen from the menu bar at the top of the screen. An app typically displays several menus in the menu bar. See Menu Bar Menus.\nContextual menu Exposes menu items related to the user\u2019s current context. A contextual menu (or shortcut menu) is displayed by Control-clicking a view or selected element in an app. See Contextual Menus.\nDock menu Exposes system-defined menu items (like Show in Finder) and app-specific menu items (like Compose New Message) when Control-clicking an app\u2019s Dock icon. See Dock Menus.\n\nTIP A pop-up button, often referred to as a pop-up menu, is a type of button that displays a menu of choices when clicked. See Pop-Up Buttons.\n\nA title describes a menu or menu item. People navigate menus and choose menu items based on their titles, so it\u2019s important for the titles to be accurate and informative.\n\nUse title-style capitalization. Title-style capitalization is used consistently for menu and menu item titles throughout the system. For more information, see Apple Style Guide.\n\nTIP Contextual and Dock menus don\u2019t need titles because they\u2019re opened after focusing on a selection, view, or Dock icon. See Contextual Menus and Dock Menus.\n\nA menu title describes the contents of the menu.\n\nProvide intuitive menu titles. A menu title should help people anticipate the types of items the menu contains. For example, you would expect a menu titled Font to include options for adjusting text attributes, not performing editing activities like copying and pasting.\n\nKeep menus enabled even when menu items are unavailable. It\u2019s important for people to be able to browse the contents of all menus to learn where commands reside, even when those commands aren\u2019t available.\n\nMake menu titles as short as possible without sacrificing clarity. One-word menu titles are best because they take up very little space in the menu bar and are easy to scan. If you must use more than one word in a menu title, use title-style capitalization.\n\nUse text, not icons, for menu titles. Only menu bar extras use icons to represent menus. See Menu Bar Extras. It\u2019s also not acceptable to use a mixture of text and icons in menu titles.\n\nA menu item title describes an action or attribute.\n\nUse verbs and verb phrases for menu items that initiate actions. Describe the action that occurs when the menu item is chosen, such as Print or Copy.\n\nUse adjectives or adjective phrases for menu items that toggle attribute states. Describe the attribute the menu item affects. Adjectives appearing in menu item titles imply an action and can often fit into the sentence \u201cChange the selected object to\u2026\u201d\u2014for example, Bold or Italic.\n\nRefrain from using articles in menu item titles. For example, use Add Account instead of Add an Account, or Hide Toolbar instead of Hide the Toolbar. Articles rarely add value because the user has already made a selection or entered a specific context. Use this style consistently in all menu item titles.\n\nUse an ellipsis whenever choosing a menu item requires additional input from the user. The ellipsis character (\u2026) means a dialog or separate window will open and prompt the user for additional information or to make a choice.\n\nDisable unavailable menu items. A disabled menu item\u2014which appears gray and doesn\u2019t highlight when the pointer moves over it\u2014helps people understand that an item is unavailable.\n\nConsider assigning keyboard shortcuts to frequently used menu items in the menu bar. A keyboard shortcut, like Command-C for Copy, lets people quickly invoke the menu item anytime using a simple keystroke. Keyboard shortcuts aren\u2019t used in contextual menus or Dock menus.\n\nA submenu is a menu item that operates as a menu, displaying a set of nested items when selected. Submenus let you construct hierarchical menus that group related commands together to keep menus organized and intuitive. For example, the Edit menu often includes Find, Spelling and Grammar, Substitutions, Transformations, and Speech submenus, each of which contains menu items that are helpful when editing text. Menu items that have a submenu include a triangle to differentiate them from menu items that don't have submenus. When the user highlights (or uses the keyboard to select) a menu item with a triangle, the submenu appears alongside its parent menu.\n\nLimit the use of submenus. Every submenu adds a layer of complexity and hides menu items from the user. Reserve submenus for when you have groups of closely related commands that can be intuitively grouped under a single parent menu item, or when you need to reduce the length of your menus.\n\nLimit the depth and length of submenus. If you must include submenus, restrict them to a single level. If a submenu contains more than five items, consider giving it its own menu.\n\nMake sure the menu items within a submenu are logically related. In general, submenus work best for menu items that toggle attributes on and off rather than initiate actions. For example, the Format menu in Pages has a Font submenu that includes menu items for enabling and disabling text attributes, such as Bold, Italic, and Underline.\n\nProvide an intuitive submenu title. Provide a succinct, descriptive title that hints at the menu items the submenu contains. For guidance, see Menu and Menu Item Titles.\n\nKeep submenus enabled even when their nested menu items are unavailable. It\u2019s important for people to be able to browse menus and submenus to learn where commands reside, even when those commands aren\u2019t available.\n\nUse a submenu instead of indenting menu items. Indentation results in an inconsistent interface and doesn\u2019t express relationships between menu items. If you need to indent, then a submenu is a better choice.\n\nOrganizing Menu Items\n\nOrganize menu items to help people locate commands.\n\nUse separator lines to create visually distinct groups of related menu items. The number of groups to provide is partly an aesthetic decision and partly a usability decision.\n\nPlace the most frequently used items at the top of a menu. When users click to open a menu, their focus is on the top area of that menu. Placing the most used items at the top of the menu ensures that people will always find the item they\u2019re looking for. At the same time, avoid arranging an entire menu based on frequency of use. It\u2019s better to create groups of related items and place the more frequently used groups above the less frequently used groups. For example, the Find Next command typically appears beneath the Find command.\n\nCreate separate groups for menu items that initiate actions and menu items that set attributes. Menu items become unpredictable when the behavior of grouped items varies.\n\nGroup interdependent menu items that set attributes. People expect to find related attribute menu items together. For example, when setting font attributes, it makes sense to see the menu items for applying bold, italic, and underline grouped together. Within a group, attribute menu items can be mutually exclusive (the user can select only one item, like an alignment) or independent (the user can select multiple items, like bold and italic).\n\nMake it easy for people to locate menu items by grouping similar actions together. For example, the Arrange menu in Numbers includes groups for aligning and distributing objects, as well as items for Group and Ungroup.\n\nConsolidate related menu items. If a term is used more than twice within a group of menu items, consider dedicating a separate menu or submenu to the term. For example, instead of offering separate menu items for Sort by Date, Sort by Subject, and Sort by Unread, the View menu in Mail includes a Sort By submenu that contains items like Date, Subject, and Unread.\n\nBe mindful of menu length. In general, long menus are difficult to scan and can be overwhelming. If a menu becomes too long, try redistributing its items. See if some items fit naturally in other menus or if it makes sense to create a new menu. Groups of related items sometimes call for the use of a submenu. See Submenus.\n\nDon\u2019t intentionally design a scrolling menu. Scrolling menus have items that extend beyond the top or bottom edge of the screen. Scrolling menus are acceptable when a menu contains user-defined or dynamically generated content. For example, the History and Bookmarks menus in Safari may have scrolling submenus. The History menu includes submenus for websites visited on specific days; the length of the Bookmarks submenus depends on how the user has organized their favorite websites. A scrolling menu displays a downward or upward triangle at its bottom or top to hint at scrollable offscreen content.\n\nVariable Menu Items\n\nSometimes it makes sense for a menu to display slightly different items based on a user action. macOS supports two ways to do this: dynamic menu items and toggled menu items.\n\nDynamic Menu Items\n\nA menu item is dynamic when its behavior changes with the addition of a modifier key (Control, Option, Shift, or Command). For example, the Minimize item in the Window menu changes to Min... (truncated)",
        "topic_id":2,
        "format_id":20,
        "topic_confidence":0.729806602,
        "format_confidence":0.9452585578,
        "weight":0.0063720975
    },
    {
        "url":"http:\/\/www.perlmonks.org\/?node_id=406232",
        "text":"Beefy Boxes and Bandwidth Generously Provided by pair Networks\nWe don't bite newbies here... much\n\nRe: Gratuitous use of Perl Prototypes\n\nby perrin (Chancellor)\non Nov 08, 2004 at 22:49\u00a0UTC (\u00a0#406232=note:\u00a0print\u00a0w\/\u00a0replies, xml\u00a0) Need Help??\n\nin reply to Gratuitous use of Perl Prototypes\n\nMy first thought any time I see code with prototypes is that the person who wrote it doesn't know Perl very well. There's no reason to use them except to try and do something tricky like your PUSH() example, and I think that's a bad idea because it has hidden behaviors and doesn't work the way other subs do. Better to treat all your subs consistently and use references explicitly when you want them.\n\nComment on Re: Gratuitous use of Perl Prototypes\nReplies are listed 'Best First'.\nRe^2: Gratuitous use of Perl Prototypes\nby leriksen (Curate) on Nov 09, 2004 at 00:56\u00a0UTC\n    If you need particular types in your parameters, another way to achieve this (and quite possibly more robust than prototype as the clinical dissection above shows) is to use the \"program by contract\" paradigm.\n\n    So if you need the first parameter to be an array ref, put in code to test this precondition -\n\n    sub PUSH { my ($aref, @new) = @_; carp \"first parameter must be an array reference\" unless ref $aref e +q 'ARRAY'; ... }\n\n    Even better, use Params::Validate\n\n    If your emulating a builtin like push, using the same interface has advantages (in this case positional parameters), but I prefer using named parameters as much as possible - it also can cut out a number of errors if you choose appropriate parameter names e.g.\n\n    sub NAMED_PUSH { my(%args) = @_; carp \"dest_aref parmeter must be an array reference\" unless ref $arg +s{dest_aref} eq 'ARRAY'; ... }\n\n    Your POD for this sub (dont give me that puzzled look !!!) should document what keys are expected, and the code checks you have keep your part of the contract.\n\n    use brain;\n\nLog In?\n\nWhat's my password?\nCreate A New User\nNode Status?\nnode history\nNode Type: note [id:\/\/406232]\nand the web crawler heard nothing...\n\nHow do I use this? | Other CB clients\nOther Users?\nOthers making s'mores by the fire in the courtyard of the Monastery: (6)\nAs of 2015-08-30 16:19 GMT\nFind Nodes?\n    Voting Booth?\n\n    The oldest computer book still on my shelves (or on my digital media) is ...\n\n    Results (350 votes), past polls",
        "topic_id":2,
        "format_id":4,
        "topic_confidence":0.9835820198,
        "format_confidence":0.9547068477,
        "weight":0.009236304
    },
    {
        "url":"https:\/\/codecrew.codewithchris.com\/t\/mukul-car-listing-app-challenge\/20600",
        "text":"Learn Courses My Dashboard\n\nMukul - Car Listing App Challenge\n\n\nGreetings! I started learning Swift & Swift UI from the beginning of August 2022, still on the way of learning SwiftUI foundation course of CodeWithChris. That\u2019s why attending the weekly challenge for the first time is quite a big deal for me. Thanks to the organizers to arrange such a beautiful & productive event. Hope it will be announced every month.\n\nI have so far completed the tasks of Level 1.\n\nLevel 1 Requirements:\n\n  \u2022 Show a simple list of collapsed items or cards\n  \u2022 Extract the list information from the join JSON file, or you can come up with your own assets\n  \u2022 Show a collapsed list that consists of the following:\n    \u2022 Car Image\n    \u2022 Name\n    \u2022 Price\n    \u2022 Rating\n\nMy Github repository is here\n\n\nStill trying to level up, struggling with expandable card. Any hints?\n\n1 Like",
        "topic_id":2,
        "format_id":4,
        "topic_confidence":0.9832931757,
        "format_confidence":0.8884863853,
        "weight":0.0092335916
    },
    {
        "url":"http:\/\/www.lispworks.com\/documentation\/lw50\/CAPUG-U\/html\/capiuser-u-54.htm",
        "text":"5.7.2 Selections\n\nAll choices have a selection. This is a state representing the items currently selected. The selection is represented as a vector of offsets into the list of the choice's items, unless it is a single-selection choice, in which case it is just represented as an offset.\n\nThe initial selection is controlled with the initarg :selection . The accessor choice-selection is provided.\n\nGenerally, it is easier to refer to the selection in terms of the items selected, rather than by offsets, so the CAPI provides the notion of a selected item and the selected items . The first of these is the selected item in a single-selection choice. The second is a list of the selected items in any choice.\n\nThe accessors choice-selected-item and choice-selected-items and the initargs :selected-item and :selected-items provide access to these conceptual slots.\n\nLispWorks CAPI User Guide (Unix version) - 14 Jun 2006",
        "topic_id":2,
        "format_id":20,
        "topic_confidence":0.9555914402,
        "format_confidence":0.9868260026,
        "weight":0.0083434731
    },
    {
        "url":"https:\/\/courses.thecssworkshop.com\/p\/css-grid",
        "text":"CSS Grid\n\nCSS Grid\n\nLearn CSS Grid by coding along with me. From your first simple layout to more obscure parts of the specification, after completing this course you will understand all of the different ways to use grid layout.\n\nThis course is also part of the CSS Layout Complete bundle.\n\nImportant! If you are an existing student on my previous platform this is an upgrade to the material you have already paid for, complete the form here and I will add you!\n\nSelect a pricing plan and sign up\n\n\nPaid Course",
        "topic_id":2,
        "format_id":16,
        "topic_confidence":0.8116320968,
        "format_confidence":0.9955400825,
        "weight":0.0024753697
    },
    {
        "url":"https:\/\/games.slashdot.org\/submission\/1289408\/a-simple-3d-benchmark-in-html5javascript",
        "text":"\n\n\nForgot your password?\n\nSubmission + - A simple 3d benchmark in HTML5\/Javascript (semantix.gr)\n\nttsiod writes: Having heard so much about HTML5\/Javascript over the last years, I finally took the plunge, and after 5h of coding (mostly spent Googling for the way to do PutPixel), I humbly submit my first HTML5\/Javascript app: a simple 3d benchmark that \"stress-tests\" the browser's Javascript engine. It turned out to be a nice race between Chrome, Opera and Firefox4. Run it and see how your results compare....\nThis discussion was created for logged-in users only, but now has been archived. No new comments can be posted.\n\nA simple 3d benchmark in HTML5\/Javascript\n\nComments Filter:\n\nIt is now pitch dark. If you proceed, you will likely fall into a pit.",
        "topic_id":2,
        "format_id":4,
        "topic_confidence":0.9784622192,
        "format_confidence":0.9721392393,
        "weight":0.0091882266
    },
    {
        "url":"https:\/\/armenzg.blogspot.com\/2007\/09\/session-5-build-ff-debug-mode-in.html",
        "text":"Friday, September 21, 2007\n\nSession 5 - build ff debug mode in Windows XP computer\n\nI assumed that my experience on the spring about building the fox was enough, therefore I didn't worry too much to do this time, but I decided to have multiple mozconfig files and I have seen that the build in my windows vista doesn't work properly.\n\nNow, I'm gone to my brothers XP computer and I have done this:\n  \u2022 Installed MS Visual C++ Express edition\n  \u2022 Installed Windows 2003 SP SDK\n  \u2022 Installed Mozilla Build 1.1\nI've run msvc8.bat and run these commands:\n  \u2022 cd \/c\/\n  \u2022 mkdir ff\n  \u2022 cd ff\n  \u2022 cvs -d co mozilla\/\n  \u2022 time make -f checkout MOZ_CO_PROJECT=browser \/\/ 11 min and 27 sec\n  \u2022 vi .mozconfig\n  \u2022 # mozconfig file for Firefox in debug mode, disable optimization\n    # and using shared libraries instead of static\n\n    mk_add_options MOZ_OBJDIR=@TOPSRCDIR@\/..\/ff-debug-@CONFIG-GUESS@\n\n    # this line includes two commands that appear on\n    # it adds MOZ_CO_PROJECT=browser and enable app = browser\n    . $topsrcdir\/browser\/config\/mozconfig\n\n    ac_add_options --disable-optimize\n    ac_add_options --enable-debug\n    ac_add_options --disable-static --enable-shared\n  \u2022 time make -f checkout \/\/ 5 min; I don't have to type MOZ_CO_PROJECT since it is defined in the .mozconfig - Last checkout to see if I've the latest code\n  \u2022 Before I build (instructions )\n  \u2022 time make -f build \/\/ 81min (Amd Sempron 2600+, 1,6Ghz, 768MBRam)\nLet's run the ff3 in debug mode:\n  \u2022 export XPCOM_DEBUG=warn\n  \u2022 \/c\/ff\/mozilla\/ff-debug-\/dist\/bin\/firefox.exe -Profilemanager -no-remote\n  \u2022 Create a new profile: development\n  \u2022 Select \"OK\", few error messages and minefield is running\n\nAnother things that I have learnt:\n  \u2022 I could download a tar ball (source code compressed into .tar.gz extension) and build from there\n  \u2022 For trunk builds, you can simply run make package in your object directory to create a packaged build. This will create a zip or tar.gz file in objdir\/dist which you can then unpack anywhere.\n  \u2022 To build a Windows installer, simply use make installer in your object directory.",
        "topic_id":2,
        "format_id":15,
        "topic_confidence":0.9872341156,
        "format_confidence":0.5915856957,
        "weight":0.0087790009
    },
    {
        "url":"https:\/\/inspect.dev\/",
        "text":"Introducing Inspect\n\nThe mobile DevTools you'll love using\n\nInspect is a new developer tool for macOS and Windows to inspect and debug your mobile web apps and websites on iOS devices.\n\nTry Inspect for free\n\nWhy Inspect?\n\nDebug the web on iOS devices\n\nInspect enables to you debug Safari and WebViews on your iOS device.\n\nWorks on Windows and macOS\n\nInspect brings iOS Web debugging to both Windows and macOS.\n\nUI from Chrome DevTools\n\nInspect is built on Chrome DevTools, so you feel right at home from day one.\n\nNo new hardware needed\n\nNo new hardware needed. Inspect is provides a software-only solution that works across platforms.\n\nComing soon: React, Angular and Vue DevTools\n\nInspect will bundle your favorite DevTools extensions, so you can debug your frameworks.\n\nComing soon: Debug the web on Android devices\n\nInspect will also enable you to debug Chrome and WebViews on your Android device.\n\nComing soon: Screencasting\n\nInspect will give you screencasting so you don't have to take your fingers off the keyboard.\n\nComing soon: Inspect over Wifi\n\nInspect will support debugging of iOS devices over WIFI. It's time to let go off the cables.\n\nRead more on Why Inspect?",
        "topic_id":2,
        "format_id":16,
        "topic_confidence":0.9709532857,
        "format_confidence":0.9725618958,
        "weight":0.0029612781
    },
    {
        "url":"https:\/\/www.fz-juelich.de\/ias\/jsc\/EN\/Expertise\/Support\/Software\/Nassi\/_node.html",
        "text":"Navigation and service\n\n\nThe nassi program developed at the J\u00fclich Supercomputing Centre (JSC) at the Forschungszentrum J\u00fclich is a tool to generate Nassi-Shneiderman diagrams under Unix\/X11. nassi is designed primarily for the creation of documentation, but may as well be used for source code analysis\/browsing.\n\nC and PASCAL programs and pseudo code that follows the conventions of either of these languages can be transformed into a graphical representation of the program flow. For representation and postprocessing nassi provides a convenient interface with which single diagrams can be selected, drawn on the screen, exported in several output formats and printed.\n\nA graphics editor allows layout changes of the whole diagram or of single statements or control structures. Statements and whole structures can be hidden or shifted as a block to a separate diagram. Such changes to the layout and structure of diagrams can be inserted into the source code via special comments and are then available for further treatment of the source code.\n\nFor output purposes, nassi also provides the option of generating source data of the Tgif and Xfig graphics editors in addition to screen output, Encapsulated PostScript graphics and printable PostScript files. This makes it possible to also change and extend diagrams far beyond the functionality of the built-in graphics editor. For the rapid generation of diagrams nassi provides a batch option which generates diagrams in the desired output format.\n\nFor details see the documentation or take a look at some screen shots in the tutorial.",
        "topic_id":2,
        "format_id":20,
        "topic_confidence":0.8772737384,
        "format_confidence":0.7546297908,
        "weight":0.0076596645
    },
    {
        "url":"http:\/\/cloudsecurity.codeplex.com\/wikipage?title=Tasks",
        "text":"Task Lists\n\n- J.D. Meier, Prashant Bansode, Paul Enfield.\n\nTask lists are a compilation of expected activities of customers with this technology. We attempt to determine the areas that will likely need the most guidance and prioritize them here.\n\nLast edited Aug 18, 2009 at 6:36 PM by paulenfield, version 3\n\n\nNo comments yet.",
        "topic_id":2,
        "format_id":20,
        "topic_confidence":0.9252284765,
        "format_confidence":0.6555643678,
        "weight":0.0080783676
    },
    {
        "url":"https:\/\/www.adobe.com\/devnet\/svg1\/quickstart-1\/articles\/creating_non-rectangular_windows.html",
        "text":"by Joe Ward\n\nJoe Ward\n\n\n10 June 2010\n\nRectangular windows are fine, and appropriate for most applications. However, just because they are the easiest to draw doesn't mean that all your windows have to be curve impoverished. The !Square sample application creates a window based on the ellipse, rather than the rectangle. The window uses vector graphics for most of its chrome, so there are no issues with bitmap scaling to limit the window size or aspect ratio.\n\nThe !Square sample application, shown in Figure 1, illustrates how to extend the NativeWindow class to create windows with alternative visuals and behavior using the AIR APIs and the rich Flash graphics capabilities.\n\nNote: This is a sample application provided, as is, for instructional purposes.\n\nThis sample application includes the following files and classes:\n\n  \u2022 NotSquare-app.xml: The AIR application descriptor file\n  \u2022 A stub class that creates the main application window and closes\n  \u2022 !Square.fla: Flash document for use with Adobe Flash CS3 Professional.\n  \u2022 Extends the NativeWindow class\n  \u2022 Extends the Sprite class to create a content container that clips anything outside the window client area\n  \u2022 Implements the gripper controls for resizing the window\n  \u2022 Implements a button for minimizing or restoring the window\n  \u2022 Implements a button for maximizing the window\n  \u2022 Implements a button for closing the window\n  \u2022 Loads the images used for the dock and system tray icons\n  \u2022 A class providing some sample content for the window\n  \u2022 A visual object\n  \u2022 Simulates spring forces\n  \u2022 SourceViewer.js: Implements a source code browser using an HTML window\n  \u2022 Sample AIR icon files and bitmap graphics used by the window chrome\n\nTesting the application\n\nLaunch the !Square application (!Square.air). Resize the window using any of the eight grippers along the window drag bar. Move the window using the drag bar. Drag the white disk to the edge of the window to observe that any part of the disk that is outside the window client area is properly clipped.\n\nUnderstanding the code\n\nThe !Square application uses several graphics functions not specific to AIR. For more information about these functions, see the ActionScript 3.0 Language Reference.\n\nExtending the NativeWindow class\n\nThe RoundWindow class extends the AIR NativeWindow class to specialize the constructor and to define the methods and properties to draw its window chrome. Because you cannot use a custom class for the initial application window, the !Square example uses the initial window primarily to launch an instance of the RoundWindow class to serve as the main application window. The initial window created by AIR is never made visible and is closed once initialization is complete.\n\nThe constructor of the RoundWindow class creates its own NativeWindowInitOptions object and uses it to create the underlying native window. The constructor then creates the window chrome elements and activates the window to make it visible and active.\n\npublic function RoundWindow(title:String=\"\"){ var initOptions:NativeWindowInitOptions = new NativeWindowInitOptions(); initOptions.systemChrome = NativeWindowSystemChrome.NONE; initOptions.transparent = true; super(initOptions); this.minSize = new Point(350,350); bounds = new Rectangle(0,0,viewWidth,viewHeight); this.title = title; stage.align = StageAlign.TOP_LEFT; stage.scaleMode = StageScaleMode.NO_SCALE; stage.addChild(clippedStage); \/\/Put buttons on conventional side of window if(isWindows()){ closeButton = new CloseButton(287); minRestoreButton = new MinRestoreButton(283.5); maxButton = new MaxButton(280); } else { closeButton = new CloseButton(252); minRestoreButton = new MinRestoreButton(255.5); maxButton = new MaxButton(259); } addWindowDressing(); addEventListener(NativeWindowBoundsEvent.RESIZE,onBoundsChange); draw(viewWidth,viewHeight); activate(); }\n\nDrawing elliptical borders\n\nThe border of the window is drawn using standard Flash drawing functions provided by the Graphics class, which can be accessed through the graphics property of any display object. The border is composed of three rings. When you draw overlapping figures between the calls to beginFill() and endFill(), only the difference between the figures, in this case ellipses, will be filled. The following function draws the three rings by drawing two ellipses for each ring:\n\nwith({ clear(); beginFill(bevelColor,1); drawEllipse(0,0,viewWidth,viewHeight); drawEllipse(4,4,viewWidth-8,viewHeight-8); endFill(); beginFill(borderColor,1); drawEllipse(4,4,viewWidth-8,viewHeight-8); drawEllipse(16,16,viewWidth-32,viewHeight-32); endFill(); beginFill(bevelColor,1); drawEllipse(16,16,viewWidth-32,viewHeight-32); drawEllipse(20,20,viewWidth-40,viewHeight-40); endFill(); }\n\nDrawing a section of an ellipse\n\nBecause the Graphics class does not have a function for drawing just a piece of an elliptical arc, drawing the resizing gripper onto the border is actually more challenging than drawing the border itself. You could use the curveTo() method, but calculating the proper control point locations to match the elliptical border has its own mathematical challenges. For this task, !Square uses a simpler polyline technique based on the parametric equation of the ellipse. A point on the border is calculated based on the height and width and angle from the midpoint of the ellipse. Then the next point is calculated by increasing the angle a small amount and a line is drawn between them. This process is repeated until the desired arc is drawn.\n\nFigure 2 shows the formula that can be used to calculate a point along the ellipse, given the angle, and the width and the height of the ellipse.\n\nThe grippers are arranged around the border at preset angles, so the angle is known. The width and height of the ellipse is the width and height of the window for the outer edge of the window border (viewWidth and viewHeight), and the width and height minus the thickness of the border for the inner edge of the window border.\n\nThe drawing routine uses the following formula to calculate the x and y coordinates of the four corners of the gripper, points A, B, C, and D:\n\nvar A:Point = new Point(); A.x = Math.cos(startAngle) * viewWidth\/2; A.y = Math.sin(startAngle) * viewHeight\/2; var B:Point = new Point(); B.x = Math.cos(startAngle) * (viewWidth-40)\/2; B.y = Math.sin(startAngle) * (viewHeight-40)\/2; var C:Point = new Point(); C.x = Math.cos(stopAngle) * (viewWidth-40)\/2; C.y = Math.sin(stopAngle) * (viewHeight-40)\/2; var D:Point = new Point(); D.x = Math.cos(stopAngle) * viewWidth\/2; D.y = Math.sin(stopAngle) * viewHeight\/2;;\n\nThe start and stop angles are calculated by adding and subtracting half the angular width of the gripper from the preset gripper angle. Defining the length with angles rather than a distance makes the math a bit easier and also provides a more pleasing effect when the window is resized since the gripper length stays proportional to the border diameter.\n\nvar startAngle:Number = (angleRadians - spreadRadians); var stopAngle:Number = (angleRadians + spreadRadians);\n\nThe routine next draws the shape of the gripper between the four points (see Figure 3).\n\nFirst, a straight line is drawn from A to B:\n\nmoveTo(A.x,A.y); lineTo(B.x,B.y);\n\nNext, a series of line segments is drawn between B and C. If enough segments are used, then the visual effect is indistinguishable from an actual curve. !Square uses ten segments, which seems sufficient.\n\nfor(var i:int = 1; i < 10; i++){ lineTo(Math.cos(startAngle + i * incAngle) * (viewWidth-40)\/2, Math.sin(startAngle + i * incAngle) * (viewHeight-40)\/2); }\n\nAnother straight line is drawn from C to D and the shape is closed by drawing a polyline segment from D back to A. The shape is started with the beginBitmapFill() method so when endFill() is called the area defined by the drawing commands is filled with a bitmap texture.\n\nClipping the client area\n\nThe RoundWindow class uses a sprite with a clipping mask applied as the container for its contents. Any content objects that are drawn outside the border of the window are clipped. Window chrome elements are added directly to the stage so that they are not clipped.\n\nClipping can be implemented in Flash by setting the mask property of a Sprite object with another Sprite object. The masking sprite is not drawn, but only the parts in the first sprite that fall under the shape defined by the mask's graphics commands are visible.\n\nIn !Square, the clipped sprite is defined by the ClippedStage class. This class creates a clipping mask using the familiar commands for drawing an ellipse based on the width and height of the window. Any part of an object added as a child of the ClippedStage object that falls outside the ellipse are clipped.\n\nprivate function setClipMask(bounds:Rectangle):void{;,1);,0,bounds.width,bounds.height);; }\n\nThe class also listens for resize events from the parent window and responds by redrawing the clipping mask based on the new window dimensions.\n\nprivate function onResize(event:NativeWindowBoundsEvent):void{ setClipMask(event.afterBounds); }\n\nThis type of clipping is not limited to simple shapes, so the technique can be used for any window that has areas which should be masked.\n\nResizing an elliptical window\n\nTo resize the window, the border and grippers must be redrawn based on the new width and height of the window. The resize event object includes an afterBounds property that reports the new dimensions. The width and height from this property are passed to the window draw() method.\n\nprivate function onBoundsChange(boundsEvent:NativeWindowBoundsEvent):void{ draw(boundsEvent.afterBounds.width, boundsEvent.afterBounds.height); }\n\nHandling content in an elliptical window\n\nBecause the content in the !Square window is aware of its container (the springs are attached to the border), it must react to changes in window size and shape. It does this by listening for the window resize event and recalculating the dependent variables.\n\nprivate... (truncated)",
        "topic_id":2,
        "format_id":20,
        "topic_confidence":0.9879456758,
        "format_confidence":0.7974740267,
        "weight":0.0086259649
    },
    {
        "url":"http:\/\/archive.fart.website\/bin\/irclogger_log\/newsgrabber?date=2017-11-04,Sat&tml=on",
        "text":"***: figpucker has quit IRC (Read error: Connection reset by peer)\nfigpucker has joined #newsgrabber\nfigpucker has quit IRC (Client Quit) JensRex: I have a sneaking suspicion that the precompiled wpull is kind of poopy.\n\"ERROR Fetching \\u2018https:\/\/site.com\/example.js\\u2019 encountered an error: Connect timed out.\"\nThat's never going to work. Invalid URL. JAA: Looks valid to me? \\u2018 and \\u2019 are the markers around the URL, \u2018URL\u2019.\nSomething's broken about those two characters, obviously. JensRex: I know, but it looks like someone used it as an example url.\nI don't know if the job failed because of that. Kaz: not much anyone can do about that, that URL will be tried a few times then fail, and wpull will move on to the next one\npeople put all sorts of bizarre shit into their sites, nothing to worry about too much JensRex: Okay good. It just got hung up there for a long while. Thought it might fail out. JAA: I'm not really familiar with NewsGrabber, is it using wpull 2.0.x? Kaz: can't remember what the timeout is for stuff like that, could be up to like 5 minutes JensRex: No, 1.2.3. JAA: Ah ok Kaz: considering site.com does have a valid A record JensRex: pipeline.py is Python2, so it can't use regular wpull because that's Python3 only. And the precompiled wpull is weird. JAA: https:\/\/github.com\/ArchiveTeam\/NewsGrabber-Warrior\/blob\/31b29fc0ba61a05b081c06852d9ae9413421cab5\/pipeline.py#L254-L259\nAh right, same as the Flickr project.\nWe really need to move this to Python 3.\nIt's been almost 10 years since that was released... JensRex: Hmm, investigating youtube-dl failure further: https:\/\/bpaste.net\/show\/73eb42a23506\nI'm not sure what to make of that.\nNewsgrabber fails on every video job here. JAA: Python 2 vs. 3?\nThat paste is clearly using Python 3... JensRex: That's just using the precompiled wpull.\nUninstalled local youtube-dl --> https:\/\/bpaste.net\/show\/a7fe1552962c JAA: Hmm\nSo that \"precompiled\" wpull is Python 3.4, as far as I can tell.\nI wonder though, why can't you run the normal wpull with Python 3? pipeline.py doesn't \"import wpull\", it just executes a subprocess. JensRex: I tried that yesterday in a test VM. It failed spectacularly. ***: ErkDog_ has joined #newsgrabber\nErkDog_ has quit IRC (Remote host closed the connection!)\nfigpucker has joined #newsgrabber\nfigpucker has quit IRC (Client Quit)",
        "topic_id":2,
        "format_id":4,
        "topic_confidence":0.8581045866,
        "format_confidence":0.8608314395,
        "weight":0.0080580111
    },
    {
        "url":"https:\/\/www.kernel.org\/doc\/html\/v4.20\/admin-guide\/mm\/userfaultfd.html",
        "text":"\n\nFor example userfaults allows a proper and more optimal implementation of the PROT_NONE+SIGSEGV trick.\n\n\nUserfaults are delivered and resolved through the userfaultfd syscall.\n\nThe userfaultfd (aside from registering and unregistering virtual memory ranges) provides two primary functionalities:\n\n  1. read\/POLLIN protocol to notify a userland thread of the faults happening\n  2. various UFFDIO_* ioctls that can manage the virtual memory regions registered in the userfaultfd that allows userland to efficiently resolve the userfaults it receives via 1) or to manage the virtual memory in the background\n\nThe real advantage of userfaults if compared to regular virtual memory management of mremap\/mprotect is that the userfaults in all their operations never involve heavyweight structures like vmas (in fact the userfaultfd runtime load never takes the mmap_sem for writing).\n\nVmas are not suitable for page- (or hugepage) granular fault tracking when dealing with virtual address spaces that could span Terabytes. Too many vmas would be needed for that.\n\nThe userfaultfd once opened by invoking the syscall, can also be passed using unix domain sockets to a manager process, so the same manager process could handle the userfaults of a multitude of different processes without them being aware about what is going on (well of course unless they later try to use the userfaultfd themselves on the same region the manager is already tracking, which is a corner case that would currently return -EBUSY).\n\n\nWhen first opened the userfaultfd must be enabled invoking the UFFDIO_API ioctl specifying a uffdio_api.api value set to UFFD_API (or a later API version) which will specify the read\/POLLIN protocol userland intends to speak on the UFFD and the uffdio_api.features userland requires. The UFFDIO_API ioctl if successful (i.e. if the requested uffdio_api.api is spoken also by the running kernel and the requested features are going to be enabled) will return into uffdio_api.features and uffdio_api.ioctls two 64bit bitmasks of respectively all the available features of the read(2) protocol and the generic ioctl available.\n\nThe uffdio_api.features bitmask returned by the UFFDIO_API ioctl defines what memory types are supported by the userfaultfd and what events, except page fault notifications, may be generated.\n\nIf the kernel supports registering userfaultfd ranges on hugetlbfs virtual memory areas, UFFD_FEATURE_MISSING_HUGETLBFS will be set in uffdio_api.features. Similarly, UFFD_FEATURE_MISSING_SHMEM will be set if the kernel supports registering userfaultfd ranges on shared memory (covering all shmem APIs, i.e. tmpfs, IPCSHM, \/dev\/zero MAP_SHARED, memfd_create, etc).\n\nThe userland application that wants to use userfaultfd with hugetlbfs or shared memory need to set the corresponding flag in uffdio_api.features to enable those features.\n\nIf the userland desires to receive notifications for events other than page faults, it has to verify that uffdio_api.features has appropriate UFFD_FEATURE_EVENT_* bits set. These events are described in more detail below in \u201cNon-cooperative userfaultfd\u201d section.\n\nOnce the userfaultfd has been enabled the UFFDIO_REGISTER ioctl should be invoked (if present in the returned uffdio_api.ioctls bitmask) to register a memory range in the userfaultfd by setting the uffdio_register structure accordingly. The uffdio_register.mode bitmask will specify to the kernel which kind of faults to track for the range (UFFDIO_REGISTER_MODE_MISSING would track missing pages). The UFFDIO_REGISTER ioctl will return the uffdio_register.ioctls bitmask of ioctls that are suitable to resolve userfaults on the range registered. Not all ioctls will necessarily be supported for all memory types depending on the underlying virtual memory backend (anonymous memory vs tmpfs vs real filebacked mappings).\n\nUserland can use the uffdio_register.ioctls to manage the virtual address space in the background (to add or potentially also remove memory from the userfaultfd registered range). This means a userfault could be triggering just before userland maps in the background the user-faulted page.\n\nThe primary ioctl to resolve userfaults is UFFDIO_COPY. That atomically copies a page into the userfault registered range and wakes up the blocked userfaults (unless uffdio_copy.mode & UFFDIO_COPY_MODE_DONTWAKE is set). Other ioctl works similarly to UFFDIO_COPY. They\u2019re atomic as in guaranteeing that nothing can see an half copied page since it\u2019ll keep userfaulting until the copy has finished.\n\n\nQEMU\/KVM is using the userfaultfd syscall to implement postcopy live migration. Postcopy live migration is one form of memory externalization consisting of a virtual machine running with part or all of its memory residing on a different node in the cloud. The userfaultfd abstraction is generic enough that not a single line of KVM kernel code had to be modified in order to add postcopy live migration to QEMU.\n\nGuest async page faults, FOLL_NOWAIT and all other GUP features work just fine in combination with userfaults. Userfaults trigger async page faults in the guest scheduler so those guest processes that aren\u2019t waiting for userfaults (i.e. network bound) can keep running in the guest vcpus.\n\nIt is generally beneficial to run one pass of precopy live migration just before starting postcopy live migration, in order to avoid generating userfaults for readonly guest regions.\n\nThe implementation of postcopy live migration currently uses one single bidirectional socket but in the future two different sockets will be used (to reduce the latency of the userfaults to the minimum possible without having to decrease \/proc\/sys\/net\/ipv4\/tcp_wmem).\n\nThe QEMU in the source node writes all pages that it knows are missing in the destination node, into the socket, and the migration thread of the QEMU running in the destination node runs UFFDIO_COPY|ZEROPAGE ioctls on the userfaultfd in order to map the received pages into the guest (UFFDIO_ZEROCOPY is used if the source page was a zero page).\n\nA different postcopy thread in the destination node listens with poll() to the userfaultfd in parallel. When a POLLIN event is generated after a userfault triggers, the postcopy thread read() from the userfaultfd and receives the fault address (or -EAGAIN in case the userfault was already resolved and waken by a UFFDIO_COPY|ZEROPAGE run by the parallel QEMU migration thread).\n\nAfter the QEMU postcopy thread (running in the destination node) gets the userfault address it writes the information about the missing page into the socket. The QEMU source node receives the information and roughly \u201cseeks\u201d to that page address and continues sending all remaining missing pages from that new page offset. Soon after that (just the time to flush the tcp_wmem queue through the network) the migration thread in the QEMU running in the destination node will receive the page that triggered the userfault and it\u2019ll map it as usual with the UFFDIO_COPY|ZEROPAGE (without actually knowing if it was spontaneously sent by the source or if it was an urgent page requested through a userfault).\n\nBy the time the userfaults start, the QEMU in the destination node doesn\u2019t need to keep any per-page state bitmap relative to the live migration around and a single per-page bitmap has to be maintained in the QEMU running in the source node to know which pages are still missing in the destination node. The bitmap in the source node is checked to find which missing pages to send in round robin and we seek over it when receiving incoming userfaults. After sending each page of course the bitmap is updated accordingly. It\u2019s also useful to avoid sending the same page twice (in case the userfault is read by the postcopy thread just before UFFDIO_COPY|ZEROPAGE runs in the migration thread).\n\nNon-cooperative userfaultfd\n\nWhen the userfaultfd is monitored by an external manager, the manager must be able to track changes in the process virtual memory layout. Userfaultfd can notify the manager about such changes using the same read(2) protocol as for the page fault notifications. The manager has to explicitly enable these events by setting appropriate bits in uffdio_api.features passed to UFFDIO_API ioctl:\n\nenable userfaultfd hooks for fork(). When this feature is enabled, the userfaultfd context of the parent process is duplicated into the newly created process. The manager receives UFFD_EVENT_FORK with file descriptor of the new userfaultfd context in the uffd_msg.fork.\nenable notifications about mremap() calls. When the non-cooperative process moves a virtual memory area to a different location, the manager will receive UFFD_EVENT_REMAP. The uffd_msg.remap will contain the old and new addresses of the area and its original length.\nenable notifications about madvise(MADV_REMOVE) and madvise(MADV_DONTNEED) calls. The event UFFD_EVENT_REMOVE will be generated upon these calls to madvise. The uffd_msg.remove will contain start and end addresses of the removed area.\nenable notifications about memory unmapping. The manager will get UFFD_EVENT_UNMAP with uffd_msg.remove containing start and end addresses of the unmapped area.\n\nAlthough the UFFD_FEATURE_EVENT_REMOVE and UFFD_FEATURE_EVENT_UNMAP are pretty similar, they quite differ in the action expected from the userfaultfd manager. In the former case, the virtual memory is removed, but the area is not, the area remains monitored by the userfaultfd, and if a page fault occurs in that area it will be delivered to the manager. The proper resolution for such page fault is to zeromap the faulting address. However, in the latter case, when an area is unmapped, either explicitly (with munmap() system call), or implicitly (e.g. during mremap()), the area is removed and in turn the userfaultfd context for such area disappears too and the manager will not get further userland page faults from the removed area. Still, the notification is required in order to prevent manager from using UFFDIO_COP... (truncated)",
        "topic_id":2,
        "format_id":20,
        "topic_confidence":0.9611905813,
        "format_confidence":0.9870917797,
        "weight":0.0083923604
    },
    {
        "url":"http:\/\/www.simpleviewer.net\/forum\/viewtopic.php?id=8350",
        "text":"Topic: importing an existing gallery into svmanager\n\n\nI want to import an existing gallery into svmanager and I'm having trouble forming the path that svmanager needs to see it.\n\nI have svmanager in the 'public_html' folder of my server. The pre-existing gallery is implemented on a page that's called 'gallery.html' in a subfolder\u00a0 one level down from 'public_html' called 'barry'.\n\nCan you tell me the 'import from' path or path pattern that I need in order for svmanager to manage it?\n\nAlso, can the gallery inside 'barry' be managed with a copy of svmanager that's also stored inside 'barry'? Or does svmanager need to live outside of the folder that's to be managed?\n\nThank you.\n\np.s. I've changed the name of the folder holding svmanager to 'slidemanager' if that matters.\n\nRe: importing an existing gallery into svmanager\n\nI resolved the problem on my own.\n\nThe answer was to take the hint supplied by the path in the import field and do a little exploration.\n\nThe default path in the 'import from:' field matches the 'import to:' path just above it. So I tried entering the path to the 'barry' folder from the svmanager folder a la '..\/barry\/' and that worked.\n\nAs for the question of whether the svmanager can live inside the 'barry' folder I haven't explored that yet but I'm thinking that it might not be such a good idea since it might hamper file portability? Keeping the 2 things as separate modules might just be simpler in the long run.\n\nThanks anyway. Have you ever noticed that sometimes asking a question can help you figure out an answer?\n\nRe: importing an existing gallery into svmanager\n\nI'm glad the 'hint' worked \u2013 that was the idea.\n\nI'd stay with the setup you have. Having gallery folders inside the svmanager folder is the default. Having them outside the svmanager folder should be no problem. Having the svManager folder inside the gallery folder (if I understand you correctly) is unusual and may not work.\n\nIt is possible to move galleries using svManager but there are some restrictions at the moment (it's in the manual).\n\nYou're dead right about that asking questions thing. And one of the difficulties with trying to help on the forums is that people understandably have difficulty in formulating the right question. Once we get to the right question, the answer usually comes a lot easier.\n\n\nJack Hardie\nSimpleViewer Support Team.",
        "topic_id":2,
        "format_id":4,
        "topic_confidence":0.8511759639,
        "format_confidence":0.580096364,
        "weight":0.007992948
    }
]